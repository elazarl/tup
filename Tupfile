include_rules

ifeq ($(X86_ARCH_SIBLINGS),y)
  : src/ldpreload/*.64.o |> !ld |> tup-ldpreload.so
else
  : src/ldpreload/*.o |> !ld |> tup-ldpreload.so
endif

client_objs += src/tup/vardict.o
client_objs += src/tup/access_event/send_event.o
client_objs += src/tup/flock/fcntl.o
: $(client_objs) |> !ar |> libtup_client.a
: src/tup/vardict.h |> !cp |> tup_client.h

srcs = src/tup/*.o
srcs += src/tup/access_event/*.o
srcs += src/tup/monitor/*.o
srcs += src/tup/flock/*.o
srcs += src/tup/server/*.o
srcs += src/tup/colors/*.o
srcs += src/linux/*.o
srcs += src/sqlite3/*.o
srcs += src/compat/*.o
: $(srcs) |> !ar |> libtup.a

: src/tup/tup/main.o libtup.a |> ^ LINK tup^ version=`git describe`; echo "const char *tup_version(void) {return \"$version\";}" | gcc -x c -c - -o tup-version.o; $(CC) %f tup-version.o -o tup -lutil -lpthread $(LDFLAGS) |> tup tup-version.o

ifneq (@(TUP_MINGW),)
: src/dllinject/*.omingw |> ^ MINGW32LINK %o^ @(TUP_MINGW)-gcc -shared %f -lws2_32 -lpsapi -o %o |> tup-dllinject.dll
: src/cp/*.omingw |> ^ MINGW32LINK %o^ @(TUP_MINGW)-gcc %f -o %o |> tup-cp.exe

mingwsrcs = src/tup/*.omingw
mingwsrcs += src/tup/access_event/*.omingw
mingwsrcs += src/tup/monitor/*.omingw
mingwsrcs += src/tup/tup/*.omingw
mingwsrcs += src/tup/flock/*.omingw
mingwsrcs += src/tup/server/*.omingw
mingwsrcs += src/tup/colors/*.omingw
mingwsrcs += src/linux/*.omingw
mingwsrcs += src/sqlite3/*.omingw
mingwsrcs += src/compat/*.omingw
mingwsrcs += src/compat/win32/*.omingw
MINGWLDFLAGS += -lws2_32
MINGWLDFLAGS += -Wl,--wrap=open
MINGWLDFLAGS += -Wl,--wrap=close
MINGWLDFLAGS += -Wl,--wrap=dup
MINGWLDFLAGS += -Wl,--wrap=__mingw_vprintf
MINGWLDFLAGS += -Wl,--wrap=__mingw_vfprintf
: $(mingwsrcs) tup-dllinject.dll |> ^ MINGW32LINK tup.exe^ version=`git describe`; echo "const char *tup_version(void) {return \"$version\";}" | @(TUP_MINGW)-gcc -x c -c - -o tup-version.omingw; @(TUP_MINGW)-gcc %f tup-version.omingw $(MINGWLDFLAGS) -o tup.exe |> tup.exe tup-version.omingw
endif
